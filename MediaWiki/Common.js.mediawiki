/* Any JavaScript here will be loaded for all users on every page load. */

const mq = window.matchMedia( "(max-width: 1105px)" );

$(window).resize(function() {
        autoMenu();
});

function autoMenu() {
	if (mq.matches) {
           $('.submenu .p-navbar .navbar-nav').css({'flex-direction':'column','display':'flex'}).hide();
           $('.menu-toggle').removeClass('hide-menu').addClass('show-menu').show();
	} else {
           $('.submenu .p-navbar .navbar-nav').css({'flex-direction':'row','display':'flex'}).show();
           $('.menu-toggle').removeClass('show-menu').addClass('hide-menu').hide();
	}	
}

$('.menu-toggle').click(function(){
     $('.submenu .p-navbar .navbar-nav').toggle();
     $('.edit-submenu-toggle').toggleClass('d-none d-block');
     $(this).toggleClass('show-menu hide-menu');
});

/**
 * Remove text from social icons.
 */ 
$('.social-panel a.fab').text("");

/**
 * Move TOC to the navigation panel.
 */ 
	if($('#toc').length) {

		// Create a new menu wrapper and place it on the menu bar.
			var tocmenu = $('<div></div>')
				.attr('id','tocmenu')
				.addClass('nav-item dropdown')
				.html('<a href="#" class="nav-link dropdown-toggle" data-toggle="dropdown" data-boundary="viewport">Contents</a>')
				.insertAfter('.p-tb-dropdown');

		// Make TOC elements suitable for menu dropdowns.
			$('#toc li').addClass('nav-item');
			$('#toc li a').addClass('nav-link');
			
			var cloned = $('#toc > ul').clone();
			cloned.addClass('dropdown-menu').appendTo(tocmenu);
	} 

/**
 * Offset the target heading on the height of the fixed elements.
 */ 
!function (window) 
{
	'use strict';

	// Update this function so it returns the height of your fixed headers
	function fixedHeaderOffset() 
	{
		if (mq.matches) {
        	return 200;
		} else {
			return 110;
		}
	}

	// Run on first scroll (in case the user loaded a page with a hash in the url)
	window.addEventListener('scroll', onScroll);
	function onScroll()
	{
		window.removeEventListener('scroll', onScroll);
		scrollUpToCompensateForFixedHeader();
	}

	// Run on hash change (user clicked on anchor link)
	if ( 'onhashchange' in window ) {
		window.addEventListener('hashchange', scrollUpToCompensateForFixedHeader);
	}

	function scrollUpToCompensateForFixedHeader()
	{
		var hash, 
			target, 
			offset;

		// Get hash, e.g. #mathematics
		hash = window.location.hash;
		if ( hash.length < 2 ) { return; }

		// Get :target, e.g. &lt;h2 id="mathematics"&gt;...&lt;/h2&gt;
		target = document.getElementById( hash.slice(1) );
		if ( target === null ) { return; }

		// Get distance of :target from top of viewport. If it's near zero, we assume
		// that the user was just scrolled to the :target.
		if ( target.getBoundingClientRect().top < 2 ) {
			window.scrollBy(0, -fixedHeaderOffset());
		}
	}

}(window);